package view

import (
	"fmt"
)

type FieldType int

const (
	Text FieldType = iota
	Number
	Boolean
)

type Field struct {
	Name        string
	Type        FieldType
	Default     string
	Description string
}

templ form(command string, fields []Field) {
	<form hx-post="/run" hx-target="#content" hx-select="#content" hx-swap="outerHTML">
		<input type="hidden" id="command" name="command" value={ command }/>
		<div class="space-y-12">
			<div class="border-b border-gray-900/10 pb-12">
				if len(fields) == 0 {
					<p class="text-gray-500">No parameters needed</p>
				} else {
					<div class="mt-10 grid grid-cols-1 gap-x-6 gap-y-8 sm:grid-cols-6">
						for _, f := range fields {
							switch f.Type {
								case Number:
									@numberField(f)
								case Boolean:
									@booleanField(f)
								default:
									@textField(f)
							}
						}
					</div>
				}
			</div>
		</div>
		<div class="mt-6 flex items-center justify-end gap-x-6">
			<button
				type="submit"
				class="rounded-md bg-indigo-600 px-3 py-2 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
			>Launch</button>
		</div>
	</form>
}

templ textField(f Field) {
	<div class="sm:col-span-4">
		<label for="username" class="block text-sm font-medium leading-6 text-gray-900">{ f.Name }</label>
		<div class="mt-2">
			<div
				class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md"
			>
				<input
					type="text"
					name={ f.Name }
					id={ f.Name }
					autocomplete={ f.Name }
					class="block flex-1 border-0 bg-transparent py-1.5 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6"
					value={ f.Default }
				/>
			</div>
			if f.Description != "" {
				<p class="mt-2 text-sm text-gray-500" id="email-description">{ f.Description }</p>
			}
		</div>
	</div>
}

templ numberField(f Field) {
	<div class="sm:col-span-4">
		<label for={ f.Name } class="block text-sm font-medium leading-6 text-gray-900">{ f.Name }</label>
		<div class="mt-2">
			<div
				class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md"
			>
				<input
					type="number"
					name={ f.Name }
					id={ f.Name }
					autocomplete={ f.Name }
					class="block flex-1 border-0 bg-transparent py-1.5 text-gray-900 placeholder:text-gray-400 focus:ring-0 sm:text-sm sm:leading-6"
					value={ f.Default }
				/>
			</div>
			if f.Description != "" {
				<p class="mt-2 text-sm text-gray-500" id="{ f.Name }-description">{ f.Description }</p>
			}
		</div>
	</div>
}

templ booleanField(f Field) {
	<div class="sm:col-span-4">
		<div class="mt-2">
			<div class="flex items-center">
				<input
					type="checkbox"
					name={ f.Name }
					id={ f.Name }
					class="h-4 w-4 text-indigo-600 border-gray-300 rounded focus:ring-indigo-500"
					if f.Default == "true" {
						checked
					}
				/>
				<label for={ f.Name } class="ml-2 block text-sm font-medium leading-6 text-gray-900">
					{ f.Name }
				</label>
			</div>
			if f.Description != "" {
				<p class="mt-2 text-sm text-gray-500" id="{ f.Name }-description">{ f.Description }</p>
			}
		</div>
	</div>
}

templ Form(app string, command string, fields []Field) {
	@page(app, fmt.Sprintf("Launch '%s'", command)) {
		@form(command, fields)
	}
}
